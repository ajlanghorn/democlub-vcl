backend F_who {
  .connect_timeout = 1s;
  .dynamic = true;
  .port = "<%= config.fetch('port') %>";
  .host = "<%= config.fetch('host') %>";
  .first_byte_timeout = 15s;
  .max_connections = 200;
  .share_key = "<%= config.fetch('service_id') %>";

  .ssl = true;
  .min_tls_version = "1.2";
  .ssl_cert_hostname = "<%= config.fetch('ssl_host') %>";
  .ssl_sni_hostname = "<%= config.fetch('ssl_sni') %>";

  .probe = {
    .request =
      "HEAD / HTTP/1.1"
      "User-Agent: Varnish/fastly (healthcheck)"
      "Connection: close";
    .window = 5;
    .threshold = 1;
    .timeout = 2s;
    .initial = 5;
    .dummy = true;
  }
}

sub vcl_recv {

# Force SSL
if (!req.http.Fastly-SSL) {
  error 801 "Force SSL";
}

#FASTLY recv

    if (req.request != "HEAD" && req.request != "GET" && req.request != "FASTLYPURGE") {
      return(pass);
    }

    return(lookup);
}

sub vcl_fetch {
#FASTLY fetch

  if ((beresp.status == 500 || beresp.status == 503) && req.restarts < 1 && (req.request == "GET" || req.request == "HEAD")) {
    restart;
  }

  if(req.restarts > 0 ) {
    set beresp.http.Fastly-Restarts = req.restarts;
  }

  if (beresp.http.Set-Cookie) {
    set req.http.Fastly-Cachetype = "SETCOOKIE";
    return (pass);
  }

  if (beresp.http.Cache-Control ~ "private") {
    set req.http.Fastly-Cachetype = "PRIVATE";
    return (pass);
  }

  if (beresp.status == 500 || beresp.status == 503) {
    set req.http.Fastly-Cachetype = "ERROR";
    set beresp.ttl = 1s;
    set beresp.grace = 5s;
    return (deliver);
  }  

  if (beresp.http.Expires || beresp.http.Surrogate-Control ~ "max-age" || beresp.http.Cache-Control ~"(s-maxage|max-age)") {
    # keep the ttl here
  } else {
    # apply the default ttl
    set beresp.ttl = 3600s;
  }

  return(deliver);
}

sub vcl_hit {
#FASTLY hit

  if (!obj.cacheable) {
    return(pass);
  }
  return(deliver);
}

sub vcl_miss {
#FASTLY miss
  return(fetch);
}

sub vcl_deliver {

# Set HTTP headers in the response to control client behaviours.
set resp.http.X-Frame-Options = "SAMEORIGIN";
set resp.http.X-XSS-Protection = "1; mode=block";
set resp.http.X-Content-Type-Options = "nosniff";

#FASTLY deliver
  return(deliver);
}

sub vcl_error {

# Redirect HTTP requests to HTTPS
if (obj.status == 801) {
  set obj.status = 301;
  set obj.response = "Moved Permanently";
  set obj.http.Location = "https://" req.http.host req.url;
  synthetic {""};
  return(deliver);
}

#FASTLY error
}

sub vcl_pass {
#FASTLY pass
}

sub vcl_log {
#FASTLY log
}
